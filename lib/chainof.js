// Generated by CoffeeScript 1.6.3
/*
#
# chainof.coffee
# Author:nikezono
#
*/

var Chainof;

Chainof = (function() {
  /* Fields*/

  var functions, variables;

  functions = [];

  variables = {};

  /* Constructor*/


  function Chainof() {
    functions = [];
  }

  /* Public APIs*/


  Chainof.prototype.use = function(func) {
    if (typeof func !== "function") {
      throw new Error("Incompatible Type is used for chainof");
    }
    return functions.push(func);
  };

  Chainof.prototype.length = function() {
    return functions.length;
  };

  Chainof.prototype.clear = function() {
    return functions = [];
  };

  Chainof.prototype.run = function(args) {
    var next, nullobj, stack, that, val;
    that = this;
    stack = 0;
    nullobj = {
      res: null,
      args: args
    };
    next = function() {
      var response;
      stack++;
      if (functions[stack - 1] === void 0 || null) {
        return nullobj;
      }
      response = functions[stack - 1](args, next);
      if (response && response !== nullobj) {
        return {
          res: response,
          args: args
        };
      }
      return nullobj;
    };
    val = next();
    console.log(val);
    this.extend(val.args);
    return val.res;
  };

  Chainof.prototype.variables = variables;

  /* Private Methods*/


  Chainof.prototype.extend = function(obj) {
    var key, value, _results;
    _results = [];
    for (key in obj) {
      value = obj[key];
      _results.push(variables[key] = value);
    }
    return _results;
  };

  return Chainof;

})();

module.exports = Chainof;
